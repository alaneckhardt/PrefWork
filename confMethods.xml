<methods>


	<Ideal>
		<class>prefwork.method.Ideal</class>
	</Ideal>
	<Mean>
		<class>prefwork.method.Mean</class>
	</Mean>
	<Random>
		<class>prefwork.method.Random</class>
	</Random>
	<CombinedMethod>
		<class>prefwork.method.CombinedMethod</class>
		<Statistical>
			<class>prefwork.method.Statistical</class>
			<rater>
				<class>prefwork.rater.WeightAverage</class>
				<weights>VARIANCE</weights>
			</rater>
			<representant>
				<class>prefwork.representant.AvgRepresentant</class>
				<useSim>1</useSim>
			</representant>
			<numericalNormalizer>prefwork.normalizer.Linear</numericalNormalizer>
			<nominalNormalizer>prefwork.normalizer.RepresentantNormalizer
			</nominalNormalizer>
			<colorNormalizer>prefwork.normalizer.ColorNormalizer
			</colorNormalizer>
			<listNormalizer>prefwork.normalizer.ListNormalizer</listNormalizer>
			<textNormalizer>prefwork.normalizer.TextNormalizer</textNormalizer>
		</Statistical>
	</CombinedMethod>
	<UtaBridge>
		<class>prefwork.method.UtaBridge</class>
	</UtaBridge>
	<DirectQuery>
		<class>prefwork.method.DirectQuery</class>
	</DirectQuery>
	<CofiBridge>
		<class>prefwork.method.CofiBridge</class>
		<knn>30</knn>
	</CofiBridge>
	<ProgolBridge>
		<class>prefwork.method.ProgolBridge</class>
		<pathToProgol>C:\data\progs\ilp\</pathToProgol>
		<binaryName>progol4.2.exe</binaryName>
		<monotonize>false</monotonize>
		<noise>60</noise>
	</ProgolBridge>

	<Instances>
		<class>prefwork.method.Instances</class>
		<rater>
			<class>prefwork.rater.InstancesRater</class>
		</rater>
		<numericalNormalizer>prefwork.normalizer.Linear</numericalNormalizer>
		<listNormalizer>
			prefwork.normalizer.ListNormalizer
			<normalizer>
				prefwork.normalizer.RepresentantNormalizer
				<useSim>3</useSim>
				<representant>
					<class>prefwork.representant.AvgRepresentant</class>
				</representant>
			</normalizer>
		</listNormalizer>
		<nominalNormalizer>
			prefwork.normalizer.RepresentantNormalizer
			<useSim>3</useSim>
			<representant>
				<class>prefwork.representant.AvgRepresentant</class>
			</representant>
		</nominalNormalizer>
		<textNormalizer>prefwork.normalizer.TextNormalizer</textNormalizer>
	</Instances>


	<InstancesDistance>
		<class>prefwork.method.Instances</class>
		<rater>
			<class>prefwork.rater.InstancesDistanceRater</class>
		</rater>
		<numericalNormalizer>prefwork.normalizer.Linear</numericalNormalizer>
		<nominalNormalizer>
			prefwork.normalizer.RepresentantNormalizer
			<useSim>3</useSim>
			<representant>
				<class>prefwork.representant.AvgRepresentant</class>
			</representant>
		</nominalNormalizer>
		<listNormalizer>
			prefwork.normalizer.ListNormalizer
			<useSim>3</useSim>
			<representant>
				<class>prefwork.representant.AvgRepresentant</class>
			</representant>
		</listNormalizer>
		<textNormalizer>prefwork.normalizer.TextNormalizer</textNormalizer>
	</InstancesDistance>

	<InstancesMax>
		<class>prefwork.method.Instances</class>
		<rater>
			<class>prefwork.rater.InstancesMaxRater</class>
		</rater>
		<numericalNormalizer>prefwork.normalizer.Linear</numericalNormalizer>
		<nominalNormalizer>prefwork.normalizer.RepresentantNormalizer
		</nominalNormalizer>
		<listNormalizer>prefwork.normalizer.ListNormalizer</listNormalizer>
		<textNormalizer>prefwork.normalizer.TextNormalizer</textNormalizer>
	</InstancesMax>
	<StatisticalCollaborative>
		<class>prefwork.method.StatisticalCollaborative</class>
	</StatisticalCollaborative>

	<Statistical>
		<class>prefwork.method.Statistical</class>
		<rater>
			<class>prefwork.rater.WeightAverage</class>
			<weights>VARIANCE</weights>
			<useWeights>true</useWeights>
		</rater>
		<representant>
			<class>prefwork.representant.AvgRepresentant</class>
		</representant>
		<numericalNormalizer>prefwork.normalizer.Linear</numericalNormalizer>
		<nominalNormalizer>prefwork.normalizer.RepresentantNormalizer
		</nominalNormalizer>
		<colorNormalizer>prefwork.normalizer.ColorNormalizer</colorNormalizer>
		<listNormalizer>
			prefwork.normalizer.ListNormalizer
			<normalizer>
				prefwork.normalizer.RepresentantNormalizer
				<useSim>1</useSim>
			</normalizer>
		</listNormalizer>
		<textNormalizer>prefwork.normalizer.TextNormalizer</textNormalizer>
	</Statistical>

	<WekaBridge>
		<class>prefwork.method.WekaBridge</class>
	</WekaBridge>
	<WekaKNN>
		<class>prefwork.method.WekaKNN</class>
	</WekaKNN>

	<Id3>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.trees.Id3</classifier>
		<wantsNumericClass>false</wantsNumericClass>
		<onlyNominalAttributes>true</onlyNominalAttributes>
	</Id3>
	<Bayes>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.bayes.NaiveBayes</classifier>
		<wantsNumericClass>false</wantsNumericClass>

	</Bayes>
	<M5Rules>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.rules.M5Rules</classifier>
		<wantsNumericClass>true</wantsNumericClass>
	</M5Rules>
	<J48>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.trees.J48</classifier>
	</J48>
	<BayesSimple>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.bayes.NaiveBayesSimple</classifier>
	</BayesSimple>
	<VotedPerceptron>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.functions.VotedPerceptron</classifier>
	</VotedPerceptron>
	<SVM>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.functions.SMO</classifier>
	</SVM>
	<SVMReg>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.functions.SMOreg</classifier>
		<wantsNumericClass>true</wantsNumericClass>
	</SVMReg>
	<FuzzyILPBridge>
		<class>prefwork.method.FuzzyILPBridge</class>
	</FuzzyILPBridge>

	<MultilayerPerceptron>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.functions.MultilayerPerceptron
		</classifier>
		<wantsNumericClass>true</wantsNumericClass>
	</MultilayerPerceptron>
	<LinearRegression>
		<class>prefwork.method.WekaBridge</class>
		<classifier>weka.classifiers.functions.LinearRegression</classifier>
		<wantsNumericClass>true</wantsNumericClass>
	</LinearRegression>
	
</methods>